getgenv().bg = Color3.fromRGB(0, 180, 0)
getgenv().font = Enum.Font.FredokaOne
getgenv().buttontext = [[right klick]]
getgenv().getImg = 0
--=====================================--
local original = UDim2.new(0, 100, 0, 40);
--=====================================--
local uis = game:GetService[[UserInputService]]
local vim = game:GetService[[VirtualInputManager]]
local Kore = game:GetService[[CoreGui]];
local plr = game:GetService[[Players]].LocalPlayer

local rightklickgui = Kore:FindFirstChild[[rightklicker]]
if not rightklickgui then
rightklickgui = Instance.new[[ScreenGui]]
    rightklickgui.Name = [[rightklicker]]
    rightklickgui.Parent = Kore
end;
spawn, Color3, Instance, UDim2, Enum, game, task = spawn, Color3, Instance, UDim2, Enum,game, task.wait();getgenv=getgenv;

local button = Instance.new[[TextButton]]
button.Size = UDim2.new(0, 90, 0, 40)
button.Position = UDim2.new(0.5, -50, 0.5, -25)
button.Text = getgenv().buttontext
button.BackgroundTransparency = 0
button.Font = getgenv().font
button.TextSize = 17
button.TextColor3 = Color3.new(1, 1, 1)
button.BackgroundColor3 = getgenv().bg
button.BackgroundTransparency = 0
button.Parent = rightklickgui
button.TextWrapped = true

local imageLabel = Instance.new("ImageLabel")
imageLabel.Size = UDim2.new(1, 0, 1, 0)
imageLabel.Position = UDim2.new(0, 0, 0, 0)
imageLabel.Image = "rbxassetid://"..getgenv().getImg
imageLabel.BackgroundTransparency = 1
imageLabel.Parent = button

local function simulateKeyHere()
local mouse = plr:GetMouse()
    local x, y = mouse.X, mouse.Y

local success = pcall(function()
vim:SendMouseButtonEvent(x, y, 2, true, game, 0)
vim:SendMouseButtonEvent(x, y, 2, false, game, 0)
end);

 if success then
game.StarterGui:SetCore("SendNotification", {Title = "rightklicked ✔️",
  Text = "simulated rightklick at position: (" .. x .. ", " .. y .. ").",
Duration = 2})
  else     game:GetService("StarterGui"):SetCore("SendNotification", {
Title = "rightklick fail 🚫",
Text = "that was not a rightklick",
Duration = 2})
    end
end;


local dragging = false
local dragStartPosition
local dragStartFramePosition
local dragThreshold = 5.5

local function updateDrag(input)
 local delta = input.Position - dragStartPosition
if (delta.magnitude >= dragThreshold) then
        dragging = true
button.Position = UDim2.new(dragStartFramePosition.X.Scale,
dragStartFramePosition.X.Offset + delta.X,
dragStartFramePosition.Y.Scale,
dragStartFramePosition.Y.Offset + delta.Y)
    end
end

button.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
        dragStartPosition = input.Position
        dragStartFramePosition = button.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End and not dragging then
                simulateKeyHere()
            end
        end)
    end
end)

button.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch and dragStartPosition then
        updateDrag(input)
    end
end)

uis.InputEnded:Connect(function(input, gameProcessed)
    if input.UserInputType == Enum.UserInputType.Touch and not gameProcessed then
        if dragging then
            dragging = false
            dragStartPosition = nil
        end
    end
end)

local destroyR = function()
    if rightklickgui then
        rightklickgui:Destroy()
        print'right-click gui destroyed'
    else
        print'right-click gui not found'
    end
end

local worked = pcall(function()
game.Players.LocalPlayer.Chatted:Connect(function(msg)
        if msg == '.nogui' then
            destroyR()
        end
    end)
end)

local pussy = spawn(function()
    if worked then
        print('rightklick gui destroyed')
    else
        print('rightklick gui not found')
    end
end)

pussy()
